// VERSÃO DEFINITIVA COM LÓGICA AVANÇADA DE TABELA

function doPost(e) {
  try {
    Logger.log("Iniciando execução do doPost com formatação definitiva...");

    var dados = JSON.parse(e.postData.contents);
    Logger.log("Dados recebidos.");

    // --- Início da Criação e Formatação ---
    var spreadsheet = SpreadsheetApp.create("Plano de Curso - " + dados.nomeCurso);
    var sheet = spreadsheet.getSheets()[0];
    Logger.log("Planilha criada: " + dados.nomeCurso);

    spreadsheet.setSpreadsheetTimeZone('America/Sao_Paulo');
    sheet.setHiddenGridlines(true);

    // Adicionando a imagem com tamanho fixo
    if (dados.imageUrl && dados.imageUrl.startsWith("http")) {
      try {
        var imagem = sheet.insertImage(dados.imageUrl, 1, 1);
        imagem.setWidth(300);
        imagem.setHeight(130);
        Logger.log("Logotipo inserido com sucesso.");
      } catch (imgError) {
        Logger.log("Falha ao inserir o logotipo: " + imgError.toString());
      }
    }

    // --- FORMATAÇÃO PRECISA DO CABEÇALHO ---
    sheet.getRange("A2").setValue("PLANEJAMENTO DOCENTE");
    sheet.getRange("A2:T2").merge().setHorizontalAlignment("center").setVerticalAlignment("middle").setFontWeight("bold").setFontSize(35);
    sheet.getRange("B5").setValue("Unidade Escolar:");
    sheet.getRange("C5:H5").merge().setValue("Palmas - Centro de Educação e Tecnologia - CETEC");
    sheet.getRange("J5:K5").merge().setValue("Início e Fim:");
    sheet.getRange("L5:T5").merge().setValue(dados.dataInicioCurso + " - " + dados.dataFimCurso);
    sheet.getRange("B6").setValue("Curso:");
    sheet.getRange("C6:H6").merge().setValue(dados.nomeCurso);
    sheet.getRange("J6:K6").merge().setValue("Modalidade:");
    sheet.getRange("L6:T6").merge().setValue("HABILITAÇÃO TÉCNICA");
    sheet.getRange("B7").setValue("Código da Turma:");
    sheet.getRange("C7:H7").merge().setValue("TEC.2024.2.247");
    sheet.getRange("J7:K7").merge().setValue("Carga Horária da U.C:");
    sheet.getRange("L7:T7").merge().setValue(dados.cargaHorariaTotal).setHorizontalAlignment("left");
    sheet.getRange("B8").setValue("Unidade Curricular:");
    sheet.getRange("C8:H8").merge().setValue(dados.nomeUC);
    sheet.getRange("J8:K8").merge().setValue("Instrutor:");
    sheet.getRange("L8:T8").merge().setValue("SAMUEL TELES DOS SANTOS");
    sheet.getRange("A5:B8").setFontWeight("bold");
    sheet.getRange("J5:K8").setFontWeight("bold");
    sheet.getRange("C5:H8").setBackground("#dbe5f1");
    sheet.getRange("L5:T8").setBackground("#dbe5f1");
    sheet.getRange("B5:T8").setVerticalAlignment("middle");
    for (var i = 5; i <= 8; i++) {
      sheet.getRange(i, 3, 1, 6).setBorder(true, false, true, false, false, false, '#1a73e8', SpreadsheetApp.BorderStyle.SOLID_MEDIUM);
      sheet.getRange(i, 12, 1, 9).setBorder(true, false, true, false, false, false, '#1a73e8', SpreadsheetApp.BorderStyle.SOLID_MEDIUM);
    }
    sheet.setRowHeights(5, 4, 30);
    sheet.getRange("A10:M10").merge().setValue("Plano de Ensino").setHorizontalAlignment("center");
    sheet.getRange("N10:T10").merge().setValue("Plano de Aula").setHorizontalAlignment("center");
    sheet.getRange("A10:T10").setFontWeight("bold").setVerticalAlignment("middle");
    sheet.getRange("A11:C12").merge().setValue("O que? - Cruzamento de:\nSubfunção\nCapacidade\nConhecimento");
    sheet.getRange("D11:D12").merge().setValue("Identificação - MATRIZ DE REFERÊNCIA SAEP");
    sheet.getRange("E11:G12").merge().setValue("Como?\nEstratégia de Ensino");
    sheet.getRange("H11:I12").merge().setValue("Onde?\nAmbientes Pedagógicos");
    sheet.getRange("J11:L12").merge().setValue("Recursos Didáticos");
    sheet.getRange("M11:M12").merge().setValue("Carga Horária");
    sheet.getRange("N11:P12").merge().setValue("Critérios de Avaliação");
    sheet.getRange("Q11:Q12").merge().setValue("Instrumentos de Avaliação da Aprendizagem");
    sheet.getRange("R11:R12").merge().setValue("Situação de Aprendizagem");
    sheet.getRange("S11:T11").merge().setValue("Quando");
    sheet.getRange("S12").setValue("Início");
    sheet.getRange("T12").setValue("Fim");
    sheet.getRange("A11:T12").setFontWeight("bold").setHorizontalAlignment("center").setVerticalAlignment("middle").setWrap(true);
    sheet.getRange("A10:M12").setBackground("#d6e3bc");
    sheet.getRange("N10:T12").setBackground("#dbe5f1");
    sheet.setRowHeight(11, 60);
    sheet.setRowHeight(12, 40);

    // =========================================================================
    // ✨ INÍCIO DO NOVO BLOCO DE LÓGICA AVANÇADA DE PREENCHIMENTO DA TABELA ✨
    // =========================================================================
      // --- LÓGICA AVANÇADA DE PREENCHIMENTO DA TABELA ---
    var courseContent = dados.conteudoDetalhado;
    var diasDeAula = dados.diasDeAulaValidos || []; // Recebe a lista de datas do servidor
    var diaDeAulaIndex = 0; // Um contador para percorrer a lista de datas
    var currentRow = 13; 

    if (courseContent && courseContent.length > 0) {
      courseContent.forEach(function (topic) {
        var startRowForTopic = currentRow;
        var horasArray = topic.cargaHoraria.split(',').map(function (item) {
          return parseInt(item.trim(), 10) || 0;
        });
        var numSubRows = horasArray.length > 0 ? horasArray.length : 1;

        // Loop para cada dia de aula DENTRO do tópico
        for (var i = 0; i < numSubRows; i++) {
          // Se não houver mais datas na lista, para evitar erros
          if (diaDeAulaIndex >= diasDeAula.length) {
            Logger.log("AVISO: A carga horária excede o número de dias de aula fornecidos.");
            break;
          }

          // Preenche os dados de conteúdo APENAS na primeira sub-linha
          if (i === 0) {
            sheet.getRange(currentRow, 1).setValue(topic.oque);
            sheet.getRange(currentRow, 4).setValue(topic.saep || "-");
            sheet.getRange(currentRow, 5).setValue(topic.como);
            sheet.getRange(currentRow, 8).setValue(topic.onde);
            sheet.getRange(currentRow, 10).setValue(topic.recursos);
            sheet.getRange(currentRow, 14).setValue(topic.criterios);
            sheet.getRange(currentRow, 17).setValue(topic.instrumentos);
            sheet.getRange(currentRow, 18).setValue(topic.situacaoAprendizagem);
          }

          // ✨ ✨ ✨ LÓGICA DE DATAS CORRIGIDA ✨ ✨ ✨
          // Pega a data EXATA da nossa lista, em vez de a calcular
          var dataCorreta = diasDeAula[diaDeAulaIndex];
          sheet.getRange(currentRow, 13).setValue(horasArray[i] || 0);
          sheet.getRange(currentRow, 19).setValue(dataCorreta); // Início
          sheet.getRange(currentRow, 20).setValue(dataCorreta); // Fim (é o mesmo dia)

          // Prepara para a próxima linha e a PRÓXIMA DATA NA LISTA
          currentRow++;
          diaDeAulaIndex++;
        }
        // Se o tópico teve mais de uma aula, mescla as células verticalmente
                  sheet.getRange(startRowForTopic, 1, numSubRows, 3).merge();  // O que?
          sheet.getRange(startRowForTopic, 4, numSubRows, 1).merge();  // Matriz
          sheet.getRange(startRowForTopic, 5, numSubRows, 3).merge();  // Como?
          sheet.getRange(startRowForTopic, 8, numSubRows, 2).merge();  // Onde?
          sheet.getRange(startRowForTopic, 10, numSubRows, 3).merge(); // Recursos
          sheet.getRange(startRowForTopic, 14, numSubRows, 3).merge(); // Critérios
          sheet.getRange(startRowForTopic, 17, numSubRows, 1).merge(); // Instrumentos
          sheet.getRange(startRowForTopic, 18, numSubRows, 1).merge(); // Situação de Aprendizagem
    
      });

      // Formatação final para todas as linhas de conteúdo criadas
      if (currentRow > 13) {
        var contentRange = sheet.getRange(13, 1, currentRow - 13, 20);
        contentRange.setVerticalAlignment("middle").setHorizontalAlignment("center");
        sheet.getRange(13, 1, currentRow - 13, 3).setHorizontalAlignment("left"); // Alinha a primeira coluna à esquerda
        contentRange.setWrap(true);
        contentRange.setBorder(true, true, true, true, true, true, '#000000', SpreadsheetApp.BorderStyle.SOLID);
      }
    }
    // =========================================================================
    // ✨ FIM DO NOVO BLOCO DE LÓGICA AVANÇADA ✨
    // =========================================================================
    // Aplica bordas externas para a seção principal da tabela
    var mainTableRange = sheet.getRange("A10:T" + sheet.getLastRow());
    mainTableRange.setBorder(true, true, true, true, true, true, '#000000', SpreadsheetApp.BorderStyle.SOLID);
    Logger.log("Formatação completa e precisa aplicada.");

    // --- Resposta JSON para o Frontend ---
    var responseData = {
      success: true,
      spreadsheetUrl: spreadsheet.getUrl(),
      spreadsheetName: spreadsheet.getName()
    };

    // =========================================================================
    // ✨ BLOCO DE PARTILHA FINAL, MOVIDO PARA O FIM E MAIS SEGURO ✨
    // =========================================================================
    try {
      var file = DriveApp.getFileById(spreadsheet.getId());
      file.setSharing(DriveApp.Access.ANYONE_WITH_LINK, DriveApp.Permission.EDIT);
      Logger.log("Permissões da planilha alteradas para 'Qualquer pessoa com o link pode ver'.");
    } catch (e) {
      Logger.log("AVISO: Falha ao tentar tornar a planilha pública. Erro: " + e.toString());
      responseData.sharingError = "A planilha foi criada, mas falhou ao tentar torná-la pública. Verifique as permissões do script.";
    }
    // =========================================================================

    return ContentService.createTextOutput(JSON.stringify(responseData))
      .setMimeType(ContentService.MimeType.JSON);

  } catch (error) {
    Logger.log("ERRO no Apps Script: " + error.toString() + " Stack: " + error.stack);
    return ContentService.createTextOutput(JSON.stringify({ success: false, error: error.toString() }))
      .setMimeType(ContentService.MimeType.JSON);
  }
}